apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.0'
    defaultConfig {
        applicationId "com.whuthm.happychat"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "IM_SERVER", "\"www.whuthm.com\"")
        buildConfigField("String", "API_URL", "\"www.whuthm.com\"")
        buildConfigField("int", "IM_PORT", "8080")


//        ndk {
//            abiFilters "armeabi"
//        }
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        cruncherEnabled false
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    productFlavors {
        flavorDimensions "env"
        emulator {
            //模拟器访问127.0.0.1访问不成功，需要使用本机ip地址映射10.0.2.2
            buildConfigField("String", "IM_SERVER", "\"10.0.2.2\"")
            buildConfigField("String", "API_URL", "\"http://10.0.2.2:8080\"")
            buildConfigField("int", "IM_PORT", "8080")
            dimension "env"
        }
        custom {
            buildConfigField("String", "IM_SERVER", "\"192.168.43.187\"")
            buildConfigField("String", "API_URL", "\"http://192.168.43.187:8080\"")
            buildConfigField("int", "IM_PORT", "8080")
            dimension "env"
        }
        official {
            dimension "env"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs_happychat', include: ['happy-chat-core-0.0.1-SNAPSHOT.jar'])
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:27.1.1'
    implementation project(':library')
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:greendao-generator:3.2.2'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    //Retrofit及其相关库
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    // protobuf converter 解析proto3需要2.2以上
    implementation 'com.squareup.retrofit2:converter-protobuf:2.2.0', {
        exclude group: 'com.google.protobuf'
    }
    //RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // rxjava2 adapter
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    // log
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'

    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:26.1.0'
    }

    def lifecycle_version = "1.1.1"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    // alternatively - just ViewModel
    //implementation "android.arch.lifecycle:viewmodel:$lifecycle_version" // use -ktx for Kotlin
    // alternatively - just LiveData
    implementation "android.arch.lifecycle:livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "android.arch.lifecycle:runtime:$lifecycle_version"

    //annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version" // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$lifecycle_version"

    implementation 'com.alibaba:fastjson:1.2.47'

    implementation 'org.greenrobot:eventbus:3.1.1'

}

