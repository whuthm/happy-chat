buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'

group = 'com.whuthm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { }
                println("$protobuf.generatedFilesBaseDir")
            }
        }
    }
    //generatedFilesBaseDir = "$rootProject.buildDir/generated-code/proto"
}

bootJar {
    launchScript()
}


idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java")
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/test/java")
    }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-websocket')
    compile('com.google.protobuf:protobuf-java:3.5.0')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    compile 'com.alibaba:fastjson:1.2.47'

}

sourceSets{
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/proto'
        }
    }

    test {
        proto {
            // In addition to the default 'src/test/proto'
            srcDir 'src/test/proto'
        }
    }
}



